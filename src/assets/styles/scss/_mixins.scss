@import 'variables';

//faster way to add full cover background images

@mixin backgroundImg($imgPath) {
  background: url($imgPath) no-repeat center top / cover;
}

//add a color overlay to any element

@mixin overlay($color,$rate) {
  box-shadow: inset 0 0 1000px transparentize($color,$rate);
}

//default button mixin

@mixin btn-default($color) {
    border: none;
    background: $color;
    box-shadow: 1px 2px 1px transparentize(#000,.5);
    display: inline-block;
    padding: 10px 18px;
    text-transform: uppercase;
    transition: .5s all cubic-bezier($cubic-slow-start);

    &:focus {
      outline: none;
    }

    &:hover {
      background: darken($color,30%);
      color: $color;
    }

}

//flexbox mixins

%flex-row-nowrap {
  display: flex;
  flex-flow: row nowrap;
}

%flex-row-wrap {
  display: flex;
  flex-flow: row wrap;
}

%flex-col-wrap {
  display: flex;
  flex-flow: column wrap;
}

%flex-col-nowrap {
  display: flex;
  flex-flow: column nowrap;
}

%flex-col-center {
  @extend %flex-col-wrap;
  align-items: center;
  justify-content: center;
}

//form elements mixins

@mixin standartInput($border-color,$shadow-color) {
  border: 1px solid $border-color;
  border-radius: 5px;
  box-shadow: 0 1px 1px transparentize($shadow-color,.7);
  padding: 8px 13px;

  &:focus {
    outline: none;
    box-shadow: 0 1px 1px $border-color;
  }
}

//fixed stretch mixin

%fixed-stretch {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
}

//scalable, proportionate headings

@mixin heading($h) {
  $size: $default-size;
  
  @if ($h == h1) {
    $size: $default-size * 4;
  }

  @if ($h == h2) {
    $size: $default-size * 3;
  }

  @if ($h == h3) {
    $size: $default-size * 2.2;
  }

  font-size: $size;
  line-height: $size * 1.1;
}


//generate a 10 color palette based on a single color 

@function palette-generator($palette, $base-col) {
  @for $i from 1 through 10 {
    $palette: append($palette, lighten($base-col, 5% * $i));
  }
  @return $palette;
}

